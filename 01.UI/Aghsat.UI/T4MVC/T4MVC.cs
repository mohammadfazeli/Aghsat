// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static Aghsat.UI.Controllers.AccountController Account = new Aghsat.UI.Controllers.T4MVC_AccountController();
    public static Aghsat.UI.Controllers.BaseController Base = new Aghsat.UI.Controllers.T4MVC_BaseController();
    public static Aghsat.UI.Controllers.HomeController Home = new Aghsat.UI.Controllers.T4MVC_HomeController();
    public static Aghsat.UI.Controllers.VehicleController Vehicle = new Aghsat.UI.Controllers.T4MVC_VehicleController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public Aghsat.UI.Areas.Admin.Controllers.AdminController Admin = new Aghsat.UI.Areas.Admin.Controllers.T4MVC_AdminController();
        public Aghsat.UI.Areas.Admin.Controllers.CategoryManagmentController CategoryManagment = new Aghsat.UI.Areas.Admin.Controllers.T4MVC_CategoryManagmentController();
        public Aghsat.UI.Areas.Admin.Controllers.PanelManagmentController PanelManagment = new Aghsat.UI.Areas.Admin.Controllers.T4MVC_PanelManagmentController();
        public Aghsat.UI.Areas.Admin.Controllers.ProductsManagmentController ProductsManagment = new Aghsat.UI.Areas.Admin.Controllers.T4MVC_ProductsManagmentController();
        public Aghsat.UI.Areas.Admin.Controllers.UnitsController Units = new Aghsat.UI.Areas.Admin.Controllers.T4MVC_UnitsController();
        public Aghsat.UI.Areas.Admin.Controllers.VehicleManagmentController VehicleManagment = new Aghsat.UI.Areas.Admin.Controllers.T4MVC_VehicleManagmentController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
        public static readonly string bootstrap_bundle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.bundle.min.js") ? Url("bootstrap.bundle.min.js") : Url("bootstrap.bundle.js");
        public static readonly string bootstrap_bundle_js_map = Url("bootstrap.bundle.js.map");
        public static readonly string bootstrap_bundle_min_js = Url("bootstrap.bundle.min.js");
        public static readonly string bootstrap_bundle_min_js_map = Url("bootstrap.bundle.min.js.map");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_js_map = Url("bootstrap.js.map");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string bootstrap_min_js_map = Url("bootstrap.min.js.map");
        public static readonly string Custom_datatables_min_js = Url("Custom-datatables.min.js");
        public static readonly string CustomScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/CustomScript.min.js") ? Url("CustomScript.min.js") : Url("CustomScript.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class esm {
            public const string UrlPath = "~/Scripts/esm";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
        public static readonly string Fulldatatables_min_js = Url("Fulldatatables.min.js");
        public static readonly string index_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/index.d.min.js") ? Url("index.d.min.js") : Url("index.d.js");
        public static readonly string jalaali_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jalaali.min.js") ? Url("jalaali.min.js") : Url("jalaali.js");
        public static readonly string jquery_3_3_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.intellisense.min.js") ? Url("jquery-3.3.1.intellisense.min.js") : Url("jquery-3.3.1.intellisense.js");
        public static readonly string jquery_3_3_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.min.js") ? Url("jquery-3.3.1.min.js") : Url("jquery-3.3.1.js");
        public static readonly string jquery_3_3_1_min_js = Url("jquery-3.3.1.min.js");
        public static readonly string jquery_3_3_1_min_map = Url("jquery-3.3.1.min.map");
        public static readonly string jquery_3_3_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.slim.min.js") ? Url("jquery-3.3.1.slim.min.js") : Url("jquery-3.3.1.slim.js");
        public static readonly string jquery_3_3_1_slim_min_js = Url("jquery-3.3.1.slim.min.js");
        public static readonly string jquery_3_3_1_slim_min_map = Url("jquery-3.3.1.slim.min.map");
        public static readonly string jquery_md_bootstrap_datetimepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.md.bootstrap.datetimepicker.min.js") ? Url("jquery.md.bootstrap.datetimepicker.min.js") : Url("jquery.md.bootstrap.datetimepicker.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string persianDatepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/persianDatepicker.min.js") ? Url("persianDatepicker.min.js") : Url("persianDatepicker.js");
        public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
        public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
        public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
        public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
        public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
        public static readonly string popper_js_map = Url("popper.js.map");
        public static readonly string popper_min_js = Url("popper.min.js");
        public static readonly string popper_min_js_map = Url("popper.min.js.map");
        public static readonly string pwt_date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pwt-date.min.js") ? Url("pwt-date.min.js") : Url("pwt-date.js");
        public static readonly string pwt_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pwt-datepicker.min.js") ? Url("pwt-datepicker.min.js") : Url("pwt-datepicker.js");
        public static readonly string README_md = Url("README.md");
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string site_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/site.min.js") ? Url("site.min.js") : Url("site.js");
        public static readonly string toastr_config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/toastr.config.min.js") ? Url("toastr.config.min.js") : Url("toastr.config.js");
        public static readonly string toastr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/toastr.min.js") ? Url("toastr.min.js") : Url("toastr.js");
        public static readonly string toastr_min_js = Url("toastr.min.js");
        public static readonly string uikit_icons_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uikit-icons.min.js") ? Url("uikit-icons.min.js") : Url("uikit-icons.js");
        public static readonly string uikit_icons_min_js = Url("uikit-icons.min.js");
        public static readonly string uikit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uikit.min.js") ? Url("uikit.min.js") : Url("uikit.js");
        public static readonly string uikit_min_js = Url("uikit.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class umd {
            public const string UrlPath = "~/Scripts/umd";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-grid.min.css") ? Url("bootstrap-grid.min.css") : Url("bootstrap-grid.css");
        public static readonly string bootstrap_grid_css_map = Url("bootstrap-grid.css.map");
        public static readonly string bootstrap_grid_min_css = Url("bootstrap-grid.min.css");
        public static readonly string bootstrap_grid_min_css_map = Url("bootstrap-grid.min.css.map");
        public static readonly string bootstrap_reboot_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-reboot.min.css") ? Url("bootstrap-reboot.min.css") : Url("bootstrap-reboot.css");
        public static readonly string bootstrap_reboot_css_map = Url("bootstrap-reboot.css.map");
        public static readonly string bootstrap_reboot_min_css = Url("bootstrap-reboot.min.css");
        public static readonly string bootstrap_reboot_min_css_map = Url("bootstrap-reboot.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        public static readonly string Custom_datatables_min_css = Url("Custom-datatables.min.css");
        public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
        public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        public static readonly string Fulldatatables_min_css = Url("Fulldatatables.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Image {
            public const string UrlPath = "~/Content/Image";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class ProductsImage {
                public const string UrlPath = "~/Content/Image/ProductsImage";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            }
        
        }
    
        public static readonly string jquery_md_bootstrap_datetimepicker_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.md.bootstrap.datetimepicker.style.min.css") ? Url("jquery.md.bootstrap.datetimepicker.style.min.css") : Url("jquery.md.bootstrap.datetimepicker.style.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class MDB {
            public const string UrlPath = "~/Content/MDB";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/Content/MDB/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class addons {
                    public const string UrlPath = "~/Content/MDB/css/addons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string datatables_select_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datatables-select.min.css") ? Url("datatables-select.min.css") : Url("datatables-select.css");
                    public static readonly string datatables_select_min_css = Url("datatables-select.min.css");
                    public static readonly string datatables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datatables.min.css") ? Url("datatables.min.css") : Url("datatables.css");
                    public static readonly string datatables_min_css = Url("datatables.min.css");
                    public static readonly string directives_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/directives.min.css") ? Url("directives.min.css") : Url("directives.css");
                    public static readonly string directives_min_css = Url("directives.min.css");
                }
            
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                public static readonly string mdb_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mdb.min.css") ? Url("mdb.min.css") : Url("mdb.css");
                public static readonly string mdb_lite_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mdb.lite.min.css") ? Url("mdb.lite.min.css") : Url("mdb.lite.css");
                public static readonly string mdb_lite_min_css = Url("mdb.lite.min.css");
                public static readonly string mdb_min_css = Url("mdb.min.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class modules {
                    public const string UrlPath = "~/Content/MDB/css/modules";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string animations_extended_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/animations-extended.min.css") ? Url("animations-extended.min.css") : Url("animations-extended.css");
                    public static readonly string animations_extended_min_css = Url("animations-extended.min.css");
                }
            
                public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
                public static readonly string style_min_css = Url("style.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class font {
                public const string UrlPath = "~/Content/MDB/font";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class roboto {
                    public const string UrlPath = "~/Content/MDB/font/roboto";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string Roboto_Bold_eot = Url("Roboto-Bold.eot");
                    public static readonly string Roboto_Bold_ttf = Url("Roboto-Bold.ttf");
                    public static readonly string Roboto_Bold_woff = Url("Roboto-Bold.woff");
                    public static readonly string Roboto_Bold_woff2 = Url("Roboto-Bold.woff2");
                    public static readonly string Roboto_Light_eot = Url("Roboto-Light.eot");
                    public static readonly string Roboto_Light_ttf = Url("Roboto-Light.ttf");
                    public static readonly string Roboto_Light_woff = Url("Roboto-Light.woff");
                    public static readonly string Roboto_Light_woff2 = Url("Roboto-Light.woff2");
                    public static readonly string Roboto_Medium_eot = Url("Roboto-Medium.eot");
                    public static readonly string Roboto_Medium_ttf = Url("Roboto-Medium.ttf");
                    public static readonly string Roboto_Medium_woff = Url("Roboto-Medium.woff");
                    public static readonly string Roboto_Medium_woff2 = Url("Roboto-Medium.woff2");
                    public static readonly string Roboto_Regular_eot = Url("Roboto-Regular.eot");
                    public static readonly string Roboto_Regular_ttf = Url("Roboto-Regular.ttf");
                    public static readonly string Roboto_Regular_woff = Url("Roboto-Regular.woff");
                    public static readonly string Roboto_Regular_woff2 = Url("Roboto-Regular.woff2");
                    public static readonly string Roboto_Thin_eot = Url("Roboto-Thin.eot");
                    public static readonly string Roboto_Thin_ttf = Url("Roboto-Thin.ttf");
                    public static readonly string Roboto_Thin_woff = Url("Roboto-Thin.woff");
                    public static readonly string Roboto_Thin_woff2 = Url("Roboto-Thin.woff2");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                public const string UrlPath = "~/Content/MDB/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lightbox {
                    public const string UrlPath = "~/Content/MDB/img/lightbox";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string default_skin_png = Url("default-skin.png");
                    public static readonly string default_skin_svg = Url("default-skin.svg");
                    public static readonly string preloader_gif = Url("preloader.gif");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class overlays {
                    public const string UrlPath = "~/Content/MDB/img/overlays";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _01_png = Url("01.png");
                    public static readonly string _02_png = Url("02.png");
                    public static readonly string _03_png = Url("03.png");
                    public static readonly string _04_png = Url("04.png");
                    public static readonly string _05_png = Url("05.png");
                    public static readonly string _06_png = Url("06.png");
                    public static readonly string _07_png = Url("07.png");
                    public static readonly string _08_png = Url("08.png");
                    public static readonly string _09_png = Url("09.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class svg {
                    public const string UrlPath = "~/Content/MDB/img/svg";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string arrow_left_svg = Url("arrow_left.svg");
                    public static readonly string arrow_right_svg = Url("arrow_right.svg");
                }
            
            }
        
            public static readonly string index_html = Url("index.html");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                public const string UrlPath = "~/Content/MDB/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class addons {
                    public const string UrlPath = "~/Content/MDB/js/addons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string datatables_select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datatables-select.min.js") ? Url("datatables-select.min.js") : Url("datatables-select.js");
                    public static readonly string datatables_select_min_js = Url("datatables-select.min.js");
                    public static readonly string datatables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datatables.min.js") ? Url("datatables.min.js") : Url("datatables.js");
                    public static readonly string datatables_min_js = Url("datatables.min.js");
                }
            
                public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
                public static readonly string jquery_3_3_1_min_js = Url("jquery-3.3.1.min.js");
                public static readonly string mdb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mdb.min.js") ? Url("mdb.min.js") : Url("mdb.js");
                public static readonly string mdb_min_js = Url("mdb.min.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class modules {
                    public const string UrlPath = "~/Content/MDB/js/modules";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string chart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/chart.min.js") ? Url("chart.min.js") : Url("chart.js");
                    public static readonly string default_file_input_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/default-file-input.min.js") ? Url("default-file-input.min.js") : Url("default-file-input.js");
                    public static readonly string enhanced_modals_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/enhanced-modals.min.js") ? Url("enhanced-modals.min.js") : Url("enhanced-modals.js");
                    public static readonly string forms_free_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/forms-free.min.js") ? Url("forms-free.min.js") : Url("forms-free.js");
                    public static readonly string jquery_easing_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.easing.min.js") ? Url("jquery.easing.min.js") : Url("jquery.easing.js");
                    public static readonly string scrolling_navbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/scrolling-navbar.min.js") ? Url("scrolling-navbar.min.js") : Url("scrolling-navbar.js");
                    public static readonly string velocity_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/velocity.min.js") ? Url("velocity.min.js") : Url("velocity.js");
                    public static readonly string velocity_min_js = Url("velocity.min.js");
                    public static readonly string waves_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/waves.min.js") ? Url("waves.min.js") : Url("waves.js");
                    public static readonly string wow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/wow.min.js") ? Url("wow.min.js") : Url("wow.js");
                }
            
                public static readonly string popper_min_js = Url("popper.min.js");
            }
        
            public static readonly string README_txt = Url("README.txt");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class scss {
                public const string UrlPath = "~/Content/MDB/scss";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _custom_skin_scss = Url("_custom-skin.scss");
                public static readonly string _custom_styles_scss = Url("_custom-styles.scss");
                public static readonly string _custom_variables_scss = Url("_custom-variables.scss");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class addons {
                    public const string UrlPath = "~/Content/MDB/scss/addons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _datatables_select_scss = Url("_datatables-select.scss");
                    public static readonly string _datatables_scss = Url("_datatables.scss");
                    public static readonly string _directives_scss = Url("_directives.scss");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class core {
                    public const string UrlPath = "~/Content/MDB/scss/core";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _colors_scss = Url("_colors.scss");
                    public static readonly string _global_scss = Url("_global.scss");
                    public static readonly string _helpers_scss = Url("_helpers.scss");
                    public static readonly string _masks_scss = Url("_masks.scss");
                    public static readonly string _mixins_scss = Url("_mixins.scss");
                    public static readonly string _typography_scss = Url("_typography.scss");
                    public static readonly string _variables_scss = Url("_variables.scss");
                    public static readonly string _waves_scss = Url("_waves.scss");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class bootstrap {
                        public const string UrlPath = "~/Content/MDB/scss/core/bootstrap";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _functions_scss = Url("_functions.scss");
                        public static readonly string _variables_scss = Url("_variables.scss");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class free {
                    public const string UrlPath = "~/Content/MDB/scss/free";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _animations_basic_scss = Url("_animations-basic.scss");
                    public static readonly string _badges_scss = Url("_badges.scss");
                    public static readonly string _buttons_scss = Url("_buttons.scss");
                    public static readonly string _cards_scss = Url("_cards.scss");
                    public static readonly string _carousels_scss = Url("_carousels.scss");
                    public static readonly string _depreciated_scss = Url("_depreciated.scss");
                    public static readonly string _dropdowns_scss = Url("_dropdowns.scss");
                    public static readonly string _footers_scss = Url("_footers.scss");
                    public static readonly string _forms_scss = Url("_forms.scss");
                    public static readonly string _input_group_scss = Url("_input-group.scss");
                    public static readonly string _list_group_scss = Url("_list-group.scss");
                    public static readonly string _loader_scss = Url("_loader.scss");
                    public static readonly string _modals_scss = Url("_modals.scss");
                    public static readonly string _msc_scss = Url("_msc.scss");
                    public static readonly string _navbars_scss = Url("_navbars.scss");
                    public static readonly string _pagination_scss = Url("_pagination.scss");
                    public static readonly string _steppers_scss = Url("_steppers.scss");
                    public static readonly string _switch_scss = Url("_switch.scss");
                    public static readonly string _tables_scss = Url("_tables.scss");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class modules {
                        public const string UrlPath = "~/Content/MDB/scss/free/modules";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class animations_extended {
                            public const string UrlPath = "~/Content/MDB/scss/free/modules/animations-extended";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string _module_scss = Url("_module.scss");
                            public static readonly string animations_extended_scss = Url("animations-extended.scss");
                        }
                    
                    }
                
                }
            
                public static readonly string mdb_lite_scss = Url("mdb.lite.scss");
                public static readonly string mdb_scss = Url("mdb.scss");
            }
        
        }
    
        public static readonly string persianDatepicker_default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/persianDatepicker-default.min.css") ? Url("persianDatepicker-default.min.css") : Url("persianDatepicker-default.css");
        public static readonly string pwt_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pwt-datepicker.min.css") ? Url("pwt-datepicker.min.css") : Url("pwt-datepicker.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
        public static readonly string toastr_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/toastr.min.css") ? Url("toastr.min.css") : Url("toastr.css");
        public static readonly string toastr_less = Url("toastr.less");
        public static readonly string toastr_min_css = Url("toastr.min.css");
        public static readonly string toastr_scss = Url("toastr.scss");
        public static readonly string uikit_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uikit-rtl.min.css") ? Url("uikit-rtl.min.css") : Url("uikit-rtl.css");
        public static readonly string uikit_rtl_min_css = Url("uikit-rtl.min.css");
        public static readonly string uikit_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uikit.min.css") ? Url("uikit.min.css") : Url("uikit.css");
        public static readonly string uikit_min_css = Url("uikit.min.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class esm 
            {
                public static class Assets
                {
                    public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper-utils.js"); 
                    public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper-utils.min.js"); 
                    public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper.js"); 
                    public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper.min.js"); 
                }
            }
            public static partial class umd 
            {
                public static class Assets
                {
                    public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper-utils.js"); 
                    public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper-utils.min.js"); 
                    public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper.js"); 
                    public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper.min.js"); 
                }
            }
            public static class Assets
            {
                public static readonly string _references_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/_references.js"); 
                public static readonly string bootstrap_datepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker.js"); 
                public static readonly string bootstrap_bundle_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.bundle.js"); 
                public static readonly string bootstrap_bundle_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.bundle.min.js"); 
                public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.js"); 
                public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.min.js"); 
                public static readonly string Custom_datatables_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Custom-datatables.min.js"); 
                public static readonly string CustomScript_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/CustomScript.js"); 
                public static readonly string Fulldatatables_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Fulldatatables.min.js"); 
                public static readonly string jalaali_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jalaali.js"); 
                public static readonly string jquery_3_3_1_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.intellisense.js"); 
                public static readonly string jquery_3_3_1_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.js"); 
                public static readonly string jquery_3_3_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.min.js"); 
                public static readonly string jquery_3_3_1_slim_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.slim.js"); 
                public static readonly string jquery_3_3_1_slim_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.slim.min.js"); 
                public static readonly string jquery_md_bootstrap_datetimepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.md.bootstrap.datetimepicker.js"); 
                public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.unobtrusive-ajax.js"); 
                public static readonly string jquery_unobtrusive_ajax_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.unobtrusive-ajax.min.js"); 
                public static readonly string jquery_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.js"); 
                public static readonly string jquery_validate_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.min.js"); 
                public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.js"); 
                public static readonly string jquery_validate_unobtrusive_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.min.js"); 
                public static readonly string modernizr_2_6_2_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/modernizr-2.6.2.js"); 
                public static readonly string persianDatepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/persianDatepicker.js"); 
                public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper-utils.js"); 
                public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper-utils.min.js"); 
                public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper.js"); 
                public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper.min.js"); 
                public static readonly string pwt_date_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/pwt-date.js"); 
                public static readonly string pwt_datepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/pwt-datepicker.js"); 
                public static readonly string respond_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/respond.js"); 
                public static readonly string respond_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/respond.min.js"); 
                public static readonly string site_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/site.js"); 
                public static readonly string toastr_config_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/toastr.config.js"); 
                public static readonly string toastr_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/toastr.js"); 
                public static readonly string toastr_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/toastr.min.js"); 
                public static readonly string uikit_icons_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/uikit-icons.js"); 
                public static readonly string uikit_icons_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/uikit-icons.min.js"); 
                public static readonly string uikit_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/uikit.js"); 
                public static readonly string uikit_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/uikit.min.js"); 
            }
        }
        public static partial class Content 
        {
            public static partial class Image 
            {
                public static partial class ProductsImage 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class MDB 
            {
                public static partial class css 
                {
                    public static partial class addons 
                    {
                        public static class Assets
                        {
                            public static readonly string datatables_select_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/addons/datatables-select.css");
                            public static readonly string datatables_select_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/addons/datatables-select.min.css");
                            public static readonly string datatables_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/addons/datatables.css");
                            public static readonly string datatables_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/addons/datatables.min.css");
                            public static readonly string directives_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/addons/directives.css");
                            public static readonly string directives_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/addons/directives.min.css");
                        }
                    }
                    public static partial class modules 
                    {
                        public static class Assets
                        {
                            public static readonly string animations_extended_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/modules/animations-extended.css");
                            public static readonly string animations_extended_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/modules/animations-extended.min.css");
                        }
                    }
                    public static class Assets
                    {
                        public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/bootstrap.css");
                        public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/bootstrap.min.css");
                        public static readonly string mdb_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/mdb.css");
                        public static readonly string mdb_lite_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/mdb.lite.css");
                        public static readonly string mdb_lite_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/mdb.lite.min.css");
                        public static readonly string mdb_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/mdb.min.css");
                        public static readonly string style_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/style.css");
                        public static readonly string style_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/css/style.min.css");
                    }
                }
                public static partial class font 
                {
                    public static partial class roboto 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class img 
                {
                    public static partial class lightbox 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class overlays 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class svg 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static partial class addons 
                    {
                        public static class Assets
                        {
                            public static readonly string datatables_select_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/addons/datatables-select.js"); 
                            public static readonly string datatables_select_min_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/addons/datatables-select.min.js"); 
                            public static readonly string datatables_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/addons/datatables.js"); 
                            public static readonly string datatables_min_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/addons/datatables.min.js"); 
                        }
                    }
                    public static partial class modules 
                    {
                        public static class Assets
                        {
                            public static readonly string chart_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/chart.js"); 
                            public static readonly string default_file_input_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/default-file-input.js"); 
                            public static readonly string enhanced_modals_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/enhanced-modals.js"); 
                            public static readonly string forms_free_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/forms-free.js"); 
                            public static readonly string jquery_easing_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/jquery.easing.js"); 
                            public static readonly string scrolling_navbar_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/scrolling-navbar.js"); 
                            public static readonly string velocity_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/velocity.js"); 
                            public static readonly string velocity_min_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/velocity.min.js"); 
                            public static readonly string waves_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/waves.js"); 
                            public static readonly string wow_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/modules/wow.js"); 
                        }
                    }
                    public static class Assets
                    {
                        public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/bootstrap.js"); 
                        public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/bootstrap.min.js"); 
                        public static readonly string jquery_3_3_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/jquery-3.3.1.min.js"); 
                        public static readonly string mdb_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/mdb.js"); 
                        public static readonly string mdb_min_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/mdb.min.js"); 
                        public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Content/MDB/js/popper.min.js"); 
                    }
                }
                public static partial class scss 
                {
                    public static partial class addons 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class core 
                    {
                        public static partial class bootstrap 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class free 
                    {
                        public static partial class modules 
                        {
                            public static partial class animations_extended 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public static readonly string bootstrap_grid_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-grid.css");
                public static readonly string bootstrap_grid_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-grid.min.css");
                public static readonly string bootstrap_reboot_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-reboot.css");
                public static readonly string bootstrap_reboot_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-reboot.min.css");
                public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.css");
                public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.min.css");
                public static readonly string Custom_datatables_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/Custom-datatables.min.css");
                public static readonly string font_awesome_css = T4MVCHelpers.ProcessAssetPath("~/Content/font-awesome.css");
                public static readonly string font_awesome_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/font-awesome.min.css");
                public static readonly string Fulldatatables_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/Fulldatatables.min.css");
                public static readonly string jquery_md_bootstrap_datetimepicker_style_css = T4MVCHelpers.ProcessAssetPath("~/Content/jquery.md.bootstrap.datetimepicker.style.css");
                public static readonly string persianDatepicker_default_css = T4MVCHelpers.ProcessAssetPath("~/Content/persianDatepicker-default.css");
                public static readonly string pwt_datepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/pwt-datepicker.css");
                public static readonly string Site_css = T4MVCHelpers.ProcessAssetPath("~/Content/Site.css");
                public static readonly string toastr_css = T4MVCHelpers.ProcessAssetPath("~/Content/toastr.css");
                public static readonly string toastr_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/toastr.min.css");
                public static readonly string uikit_rtl_css = T4MVCHelpers.ProcessAssetPath("~/Content/uikit-rtl.css");
                public static readonly string uikit_rtl_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/uikit-rtl.min.css");
                public static readonly string uikit_css = T4MVCHelpers.ProcessAssetPath("~/Content/uikit.css");
                public static readonly string uikit_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/uikit.min.css");
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


