@model Aghsat.ViewModel.Product.Product_Add_vm


@{
    /**/

    //Layout = ViewBag.lodaFromMain != null && ViewBag.lodaFromMain != true ?
    //    "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml" : null;

    Layout = null;
}

<script>

    $(".DatePersion").persianDatepicker({
        formatDate: "YYYY/MM/DD"
    });
</script>

@Html.Partial("_SubjectForm")

<div class="border border-dark  bg-light p-3">

    @using (Ajax.BeginForm(MVC.Admin.ProductsManagment.Save(), new AjaxOptions
    {
        HttpMethod = "Post",
        UpdateTargetId = "List",
        OnSuccess = "Hide"
    }, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="uk-panel">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="input-group  input-group-sm">
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            @Html.DisplayNameFor(x => x.Name)
                        </span>
                    </div>
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control uk-input" })
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                        </span>
                    </div>
                </div>

            </div>


            <div class="form-group mds-bootstrap-persian-datetime-picker-container">
                <div class="input-group  input-group-sm">
                    <div class="input-group-prepend">
                        <span class="input-group-text cursor-pointer">
                            @Html.DisplayNameFor(x => x.ProductDate)
                        </span>
                    </div>
                    <input name="ProductDate" class="DatePersion form-control uk-input" placeholder="تاریخ وارد کنید" />
                    @*@Html.TextBoxFor(x => x.ProductDate, new { @class = "DatePersion form-control uk-input text-left", value = " ", placeholder = "تاریخ وارد کنید", id = "ProductDate" })*@
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            @Html.ValidationMessageFor(x => x.ProductDate, "", new { @class = "text-danger" })
                        </span>
                    </div>
                </div>

            </div>


            <div class="form-group">
                <input type="file" name="file" id="file" />
            </div>

            <div class="row form-inline">
                <div class="col-md-6">
                    <div class="form-group ">
                        @Html.LabelFor(model => model.UnitId, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.DropDownListFor(x => x.UnitId, new SelectList(Model.UnitDropDownList, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group  ">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label " })
                        <div class="m-2">
                            @Html.DropDownListFor(x => x.CategoryId, new SelectList(Model.CategoryDropDownList, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>




            <div class="row form-inline">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label" })

                        <div class="m-3">
                            <div class="form-check">
                                @Html.EditorFor(model => model.IsDeleted)
                                @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-md-4">
                    <div class="form-group">

                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })

                        <div class="m-3">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="uk-button uk-button-primary" />
                </div>
            </div>
        </div>
    }
</div>

<br />
<br />
<br />

@Scripts.Render("~/bundles/jqueryval")




